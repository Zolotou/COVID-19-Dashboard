{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useLayoutEffect}from'react';import classes from'./Map.module.scss';import*as am4core from\"@amcharts/amcharts4/core\";import*as am4maps from\"@amcharts/amcharts4/maps\";import am4geodata_worldLow from\"@amcharts/amcharts4-geodata/worldLow\";import am4themes_dark from\"@amcharts/amcharts4/themes/dark\";import am4themes_animated from\"@amcharts/amcharts4/themes/animated\";am4core.useTheme(am4themes_dark);am4core.useTheme(am4themes_animated);function Map(props){useLayoutEffect(function(){// Create map instance\nvar chart=am4core.create(\"chartdiv\",am4maps.MapChart);// Set map definition\nchart.geodata=am4geodata_worldLow;// Set projection\nchart.projection=new am4maps.projections.Miller();// Create map polygon series\nvar polygonSeries=chart.series.push(new am4maps.MapPolygonSeries());// Exclude Antartica\npolygonSeries.exclude=[\"AQ\"];// Make map load polygon (like country names) data from GeoJSON\npolygonSeries.useGeodata=true;// Configure series\nvar polygonTemplate=polygonSeries.mapPolygons.template;polygonTemplate.tooltipText=\"{name}\";polygonTemplate.polygon.fillOpacity=0.6;// Create hover state and set alternative fill color\nvar hs=polygonTemplate.states.create(\"hover\");hs.properties.fill=chart.colors.getIndex(0);// Add image series\nvar imageSeries=chart.series.push(new am4maps.MapImageSeries());imageSeries.mapImages.template.propertyFields.longitude=\"longitude\";imageSeries.mapImages.template.propertyFields.latitude=\"latitude\";imageSeries.mapImages.template.tooltipText=\"{title}\";imageSeries.mapImages.template.propertyFields.url=\"url\";var circle=imageSeries.mapImages.template.createChild(am4core.Circle);circle.radius=3;circle.propertyFields.fill=\"color\";var circle2=imageSeries.mapImages.template.createChild(am4core.Circle);circle2.radius=3;circle2.propertyFields.fill=\"color\";circle2.events.on(\"inited\",function(event){animateBullet(event.target);});function animateBullet(circle){var animation=circle.animate([{property:\"scale\",from:1,to:5},{property:\"opacity\",from:1,to:0}],1000,am4core.ease.circleOut);animation.events.on(\"animationended\",function(event){animateBullet(event.target.object);});}var colorSet=new am4core.ColorSet();//todo - how to extract data to undependent file?\nimageSeries.data=[{\"title\":\"Brussels\",\"latitude\":50.8371,\"longitude\":4.3676,\"color\":colorSet.next()},{\"title\":\"Copenhagen\",\"latitude\":55.6763,\"longitude\":12.5681,\"color\":colorSet.next()},{\"title\":\"Paris\",\"latitude\":48.8567,\"longitude\":2.3510,\"color\":colorSet.next()},{\"title\":\"Reykjavik\",\"latitude\":64.1353,\"longitude\":-21.8952,\"color\":colorSet.next()},{\"title\":\"Moscow\",\"latitude\":55.7558,\"longitude\":37.6176,\"color\":colorSet.next()},{\"title\":\"Madrid\",\"latitude\":40.4167,\"longitude\":-3.7033,\"color\":colorSet.next()},{\"title\":\"London\",\"latitude\":51.5002,\"longitude\":-0.1262,\"url\":\"http://www.google.co.uk\",\"color\":colorSet.next()},{\"title\":\"Peking\",\"latitude\":39.9056,\"longitude\":116.3958,\"color\":colorSet.next()},{\"title\":\"New Delhi\",\"latitude\":28.6353,\"longitude\":77.2250,\"color\":colorSet.next()},{\"title\":\"Tokyo\",\"latitude\":35.6785,\"longitude\":139.6823,\"url\":\"http://www.google.co.jp\",\"color\":colorSet.next()},{\"title\":\"Ankara\",\"latitude\":39.9439,\"longitude\":32.8560,\"color\":colorSet.next()},{\"title\":\"Buenos Aires\",\"latitude\":-34.6118,\"longitude\":-58.4173,\"color\":colorSet.next()},{\"title\":\"Brasilia\",\"latitude\":-15.7801,\"longitude\":-47.9292,\"color\":colorSet.next()},{\"title\":\"Ottawa\",\"latitude\":45.4235,\"longitude\":-75.6979,\"color\":colorSet.next()},{\"title\":\"Washington\",\"latitude\":38.8921,\"longitude\":-77.0241,\"color\":colorSet.next()},{\"title\":\"Kinshasa\",\"latitude\":-4.3369,\"longitude\":15.3271,\"color\":colorSet.next()},{\"title\":\"Cairo\",\"latitude\":30.0571,\"longitude\":31.2272,\"color\":colorSet.next()},{\"title\":\"Pretoria\",\"latitude\":-25.7463,\"longitude\":28.1876,\"color\":colorSet.next()}];},[]);return/*#__PURE__*/_jsx(\"div\",{id:\"chartdiv\",className:classes.chartdiv});}export default Map;","map":{"version":3,"sources":["F:/Web-Projects/COVID-19-Dashboard/src/components/Map/Map.js"],"names":["React","useLayoutEffect","classes","am4core","am4maps","am4geodata_worldLow","am4themes_dark","am4themes_animated","useTheme","Map","props","chart","create","MapChart","geodata","projection","projections","Miller","polygonSeries","series","push","MapPolygonSeries","exclude","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","polygon","fillOpacity","hs","states","properties","fill","colors","getIndex","imageSeries","MapImageSeries","mapImages","propertyFields","longitude","latitude","url","circle","createChild","Circle","radius","circle2","events","on","event","animateBullet","target","animation","animate","property","from","to","ease","circleOut","object","colorSet","ColorSet","data","next","chartdiv"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from 'react';\r\nimport classes from './Map.module.scss';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_dark from \"@amcharts/amcharts4/themes/dark\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_dark);\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction Map(props) {\r\n  useLayoutEffect(() => {\r\n// Create map instance\r\nlet chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n// Set map definition\r\nchart.geodata = am4geodata_worldLow;\r\n\r\n// Set projection\r\nchart.projection = new am4maps.projections.Miller();\r\n\r\n// Create map polygon series\r\nlet polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n// Exclude Antartica\r\npolygonSeries.exclude = [\"AQ\"];\r\n\r\n// Make map load polygon (like country names) data from GeoJSON\r\npolygonSeries.useGeodata = true;\r\n\r\n// Configure series\r\nlet polygonTemplate = polygonSeries.mapPolygons.template;\r\npolygonTemplate.tooltipText = \"{name}\";\r\npolygonTemplate.polygon.fillOpacity = 0.6;\r\n\r\n\r\n// Create hover state and set alternative fill color\r\nlet hs = polygonTemplate.states.create(\"hover\");\r\nhs.properties.fill = chart.colors.getIndex(0);\r\n\r\n// Add image series\r\nlet imageSeries = chart.series.push(new am4maps.MapImageSeries());\r\nimageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\r\nimageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\r\nimageSeries.mapImages.template.tooltipText = \"{title}\";\r\nimageSeries.mapImages.template.propertyFields.url = \"url\";\r\n\r\nlet circle = imageSeries.mapImages.template.createChild(am4core.Circle);\r\ncircle.radius = 3;\r\ncircle.propertyFields.fill = \"color\";\r\n\r\nlet circle2 = imageSeries.mapImages.template.createChild(am4core.Circle);\r\ncircle2.radius = 3;\r\ncircle2.propertyFields.fill = \"color\";\r\n\r\n\r\ncircle2.events.on(\"inited\", function(event){\r\n  animateBullet(event.target);\r\n})\r\n\r\n\r\nfunction animateBullet(circle) {\r\n    let animation = circle.animate([{ property: \"scale\", from: 1, to: 5 }, { property: \"opacity\", from: 1, to: 0 }], 1000, am4core.ease.circleOut);\r\n    animation.events.on(\"animationended\", function(event){\r\n      animateBullet(event.target.object);\r\n    })\r\n}\r\n\r\nlet colorSet = new am4core.ColorSet();\r\n\r\n//todo - how to extract data to undependent file?\r\nimageSeries.data = [ {\r\n  \"title\": \"Brussels\",\r\n  \"latitude\": 50.8371,\r\n  \"longitude\": 4.3676,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Copenhagen\",\r\n  \"latitude\": 55.6763,\r\n  \"longitude\": 12.5681,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Paris\",\r\n  \"latitude\": 48.8567,\r\n  \"longitude\": 2.3510,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Reykjavik\",\r\n  \"latitude\": 64.1353,\r\n  \"longitude\": -21.8952,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Moscow\",\r\n  \"latitude\": 55.7558,\r\n  \"longitude\": 37.6176,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Madrid\",\r\n  \"latitude\": 40.4167,\r\n  \"longitude\": -3.7033,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"London\",\r\n  \"latitude\": 51.5002,\r\n  \"longitude\": -0.1262,\r\n  \"url\": \"http://www.google.co.uk\",\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Peking\",\r\n  \"latitude\": 39.9056,\r\n  \"longitude\": 116.3958,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"New Delhi\",\r\n  \"latitude\": 28.6353,\r\n  \"longitude\": 77.2250,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Tokyo\",\r\n  \"latitude\": 35.6785,\r\n  \"longitude\": 139.6823,\r\n  \"url\": \"http://www.google.co.jp\",\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Ankara\",\r\n  \"latitude\": 39.9439,\r\n  \"longitude\": 32.8560,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Buenos Aires\",\r\n  \"latitude\": -34.6118,\r\n  \"longitude\": -58.4173,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Brasilia\",\r\n  \"latitude\": -15.7801,\r\n  \"longitude\": -47.9292,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Ottawa\",\r\n  \"latitude\": 45.4235,\r\n  \"longitude\": -75.6979,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Washington\",\r\n  \"latitude\": 38.8921,\r\n  \"longitude\": -77.0241,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Kinshasa\",\r\n  \"latitude\": -4.3369,\r\n  \"longitude\": 15.3271,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Cairo\",\r\n  \"latitude\": 30.0571,\r\n  \"longitude\": 31.2272,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Pretoria\",\r\n  \"latitude\": -25.7463,\r\n  \"longitude\": 28.1876,\r\n  \"color\":colorSet.next()\r\n} ];\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"chartdiv\" className={classes.chartdiv}></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}