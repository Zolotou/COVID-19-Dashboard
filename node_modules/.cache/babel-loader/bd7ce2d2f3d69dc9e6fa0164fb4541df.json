{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"F:/Web-Projects/COVID-19-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"F:/Web-Projects/COVID-19-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:/Web-Projects/COVID-19-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import classes from'./GlobalPerCountry.module.scss';import axios from'axios';var GlobalPerCountry=function GlobalPerCountry(){var country=new Array(220).fill(\"\");var _useState=useState(),_useState2=_slicedToArray(_useState,2),theAPIData=_useState2[0],setAPIData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),count=_useState6[0],setCountry=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),findCountry=_useState8[0],setfindCountry=_useState8[1];var _useState9=useState('Country'),_useState10=_slicedToArray(_useState9,2),findCountryName=_useState10[0],setfindCountryName=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),value=_useState12[0],setValue=_useState12[1];var getData=function getData(){var allAPI='https://corona.lmao.ninja/v2/countries?yesterday&sort=cases';var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,countryCases;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(allAPI);case 2:data=_context.sent;countryCases=[];data.data.map(function(country){countryCases.push(country.cases);});setState(countryCases);countryCases=[];data.data.map(function(country){countryCases.push(country.country);});setCountry(countryCases);setAPIData(countryCases);case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();};var onChange=function onChange(event){setValue(event.target.value);var find=theAPIData.findIndex(checkValue);function checkValue(c){return c.search(value)!=-1;}setfindCountry(state[find]);setfindCountryName(count[find]);console.log(value);};useEffect(function(){getData();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.sheet__wrapper,children:[/*#__PURE__*/_jsx(\"input\",{value:value,onChange:onChange,type:\"text\"}),/*#__PURE__*/_jsxs(\"div\",{children:[findCountryName,\": \",/*#__PURE__*/_jsx(\"br\",{}),findCountry]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.table,children:[/*#__PURE__*/_jsx(\"ul\",{className:\"leftColumn\",children:country.map(function(value,index){return/*#__PURE__*/_jsx(\"li\",{children:count[index]},index);})}),/*#__PURE__*/_jsx(\"ul\",{className:\"rightColumn\",children:country.map(function(value,index){return/*#__PURE__*/_jsx(\"li\",{children:state[index]},index);})})]})]});};export default GlobalPerCountry;","map":{"version":3,"sources":["F:/Web-Projects/COVID-19-Dashboard/src/components/GlobalPerCountry/GlobalPerCountry.jsx"],"names":["React","useState","useEffect","classes","axios","GlobalPerCountry","country","Array","fill","theAPIData","setAPIData","state","setState","count","setCountry","findCountry","setfindCountry","findCountryName","setfindCountryName","value","setValue","getData","allAPI","fetchData","get","data","countryCases","map","push","cases","onChange","event","target","find","findIndex","checkValue","c","search","console","log","sheet__wrapper","table","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from './GlobalPerCountry.module.scss';\r\nimport axios from 'axios'\r\n\r\nconst GlobalPerCountry = () => {\r\n    const country = new Array(220).fill(\"\");\r\n    const [theAPIData, setAPIData] = useState();\r\n    const [state, setState] = useState([]);\r\n    const [count, setCountry] = useState([]);\r\n    const [findCountry, setfindCountry] = useState('');\r\n    const [findCountryName, setfindCountryName] = useState('Country');\r\n    const [value, setValue] = useState('');\r\n    const getData = () => {\r\n        const allAPI = 'https://corona.lmao.ninja/v2/countries?yesterday&sort=cases';\r\n        \r\n        const fetchData = async () => {\r\n            const data = await axios.get(allAPI);\r\n            let countryCases = [];\r\n            data.data.map(country => {countryCases.push(country.cases)})\r\n            setState(countryCases);\r\n            countryCases = [];\r\n            data.data.map(country => {countryCases.push(country.country)});\r\n            setCountry(countryCases);\r\n            setAPIData(countryCases);\r\n        }\r\n        fetchData();\r\n    }\r\n    const onChange = (event) => {\r\n        setValue(event.target.value);\r\n        let find = theAPIData.findIndex(checkValue);\r\n        function checkValue(c) {\r\n            return c.search(value) != -1;\r\n        }\r\n        setfindCountry(state[find]);\r\n        setfindCountryName(count[find]);\r\n        console.log(value);\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <div className={classes.sheet__wrapper}>\r\n                <input value={value} onChange={onChange} type=\"text\"/>\r\n               <div>{findCountryName}: <br/>{findCountry}</div>\r\n           <div className={classes.table}>\r\n               <ul className='leftColumn'>\r\n               {country.map((value, index) => {\r\n                       return <li key={index}>{count[index]}</li>\r\n                   })}\r\n               </ul>\r\n               <ul className='rightColumn'>\r\n                   {country.map((value, index) => {\r\n                       return <li key={index}>{state[index]}</li>\r\n                   })}\r\n               </ul>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalPerCountry;\r\n"]},"metadata":{},"sourceType":"module"}