{"version":3,"sources":["components/GlobalPerCountry/GlobalPerCountry.module.scss","components/GlobalSheet/GlobalSheet.module.scss","components/Map/Map.module.scss","components/Table/table.module.scss","App.module.scss","components/GlobalSheet/GlobalSheet.jsx","components/GlobalPerCountry/GlobalPerCountry.jsx","components/Map/Map.js","components/Table/table.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Global","useState","state","setState","useEffect","a","axios","get","data","cases","fetchData","className","classes","sheet__wrapper","GlobalPerCountry","country","Array","fill","theAPIData","setAPIData","count","setCountry","findCountry","setfindCountry","findCountryName","setfindCountryName","value","setValue","countryCases","map","push","onChange","event","target","find","findIndex","c","search","console","log","type","table","index","am4core","am4themes_dark","am4themes_animated","Map","props","useLayoutEffect","chart","am4maps","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","series","exclude","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","polygon","fillOpacity","states","create","properties","colors","getIndex","imageSeries","mapImages","propertyFields","longitude","latitude","url","circle","createChild","radius","circle2","animateBullet","animate","property","from","to","circleOut","events","on","object","colorSet","next","id","chartdiv","Table","title","setTitle","apiData","setAPI","deaths","onClick","recovered","todayDeaths","todayCases","casesPerOneMillion","deathsPerOneMillion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d36a9fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sheet__wrapper\":\"GlobalPerCountry_sheet__wrapper__1qE5v\",\"table\":\"GlobalPerCountry_table__34Sty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sheet__wrapper\":\"GlobalSheet_sheet__wrapper__2uekK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__45FA4\",\"chartdiv\":\"Map_chartdiv__3y_qs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sheet__wrapper\":\"table_sheet__wrapper__1hUsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3_5C5\"};","import React, {useState, useEffect} from 'react';\r\nimport classes from './GlobalSheet.module.scss';\r\nimport axios from 'axios'\r\n\r\nconst Global = () => {\r\n    const [state, setState] = useState('');\r\n    const getData = () => {\r\n        const allAPI = 'https://corona.lmao.ninja/v2/all?yesterday';\r\n        \r\n        const fetchData = async () => {\r\n            const data = await axios.get(allAPI);\r\n            setState(data.data.cases);\r\n        }\r\n        fetchData();\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <div className={classes.sheet__wrapper}>\r\n            <table>\r\n                <thead>\r\n                    <td>Global cases!</td>\r\n                </thead>\r\n                <tbody>\r\n                    <td>{state}</td>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Global;\r\n","import React, {useState, useEffect} from 'react';\r\nimport classes from './GlobalPerCountry.module.scss';\r\nimport axios from 'axios'\r\n\r\nconst GlobalPerCountry = () => {\r\n    const country = new Array(220).fill(\"\");\r\n    const [theAPIData, setAPIData] = useState();\r\n    const [state, setState] = useState([]);\r\n    const [count, setCountry] = useState([]);\r\n    const [findCountry, setfindCountry] = useState('');\r\n    const [findCountryName, setfindCountryName] = useState('Country');\r\n    const [value, setValue] = useState('');\r\n    const getData = () => {\r\n        const allAPI = 'https://corona.lmao.ninja/v2/countries?yesterday&sort=cases';\r\n        \r\n        const fetchData = async () => {\r\n            const data = await axios.get(allAPI);\r\n            let countryCases = [];\r\n            data.data.map(country => {countryCases.push(country.cases)})\r\n            setState(countryCases);\r\n            countryCases = [];\r\n            data.data.map(country => {countryCases.push(country.country)});\r\n            setCountry(countryCases);\r\n            setAPIData(countryCases);\r\n        }\r\n        fetchData();\r\n    }\r\n    const onChange = (event) => {\r\n        setValue(event.target.value);\r\n        let find = theAPIData.findIndex(checkValue);\r\n        function checkValue(c) {\r\n            return c.search(value) != -1;\r\n        }\r\n        setfindCountry(state[find]);\r\n        setfindCountryName(count[find]);\r\n        console.log(value);\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <div className={classes.sheet__wrapper}>\r\n                <input value={value} onChange={onChange} type=\"text\"/>\r\n               <div>{findCountryName}: <br/>{findCountry}</div>\r\n           <div className={classes.table}>\r\n               <ul className='leftColumn'>\r\n               {country.map((value, index) => {\r\n                       return <li key={index}>{count[index]}</li>\r\n                   })}\r\n               </ul>\r\n               <ul className='rightColumn'>\r\n                   {country.map((value, index) => {\r\n                       return <li key={index}>{state[index]}</li>\r\n                   })}\r\n               </ul>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalPerCountry;\r\n","import React, { useLayoutEffect } from 'react';\r\nimport classes from './Map.module.scss';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_dark from \"@amcharts/amcharts4/themes/dark\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_dark);\r\nam4core.useTheme(am4themes_animated);\r\n\r\nfunction Map(props) {\r\n  useLayoutEffect(() => {\r\n// Create map instance\r\nlet chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n// Set map definition\r\nchart.geodata = am4geodata_worldLow;\r\n\r\n// Set projection\r\nchart.projection = new am4maps.projections.Miller();\r\n\r\n// Create map polygon series\r\nlet polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n// Exclude Antartica\r\npolygonSeries.exclude = [\"AQ\"];\r\n\r\n// Make map load polygon (like country names) data from GeoJSON\r\npolygonSeries.useGeodata = true;\r\n\r\n// Configure series\r\nlet polygonTemplate = polygonSeries.mapPolygons.template;\r\npolygonTemplate.tooltipText = \"{name}\";\r\npolygonTemplate.polygon.fillOpacity = 0.6;\r\n\r\n\r\n// Create hover state and set alternative fill color\r\nlet hs = polygonTemplate.states.create(\"hover\");\r\nhs.properties.fill = chart.colors.getIndex(0);\r\n\r\n// Add image series\r\nlet imageSeries = chart.series.push(new am4maps.MapImageSeries());\r\nimageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\r\nimageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\r\nimageSeries.mapImages.template.tooltipText = \"{title}\";\r\nimageSeries.mapImages.template.propertyFields.url = \"url\";\r\n\r\nlet circle = imageSeries.mapImages.template.createChild(am4core.Circle);\r\ncircle.radius = 3;\r\ncircle.propertyFields.fill = \"color\";\r\n\r\nlet circle2 = imageSeries.mapImages.template.createChild(am4core.Circle);\r\ncircle2.radius = 3;\r\ncircle2.propertyFields.fill = \"color\";\r\n\r\n\r\ncircle2.events.on(\"inited\", function(event){\r\n  animateBullet(event.target);\r\n})\r\n\r\n\r\nfunction animateBullet(circle) {\r\n    let animation = circle.animate([{ property: \"scale\", from: 1, to: 5 }, { property: \"opacity\", from: 1, to: 0 }], 1000, am4core.ease.circleOut);\r\n    animation.events.on(\"animationended\", function(event){\r\n      animateBullet(event.target.object);\r\n    })\r\n}\r\n\r\nlet colorSet = new am4core.ColorSet();\r\n\r\n//todo - how to extract data to undependent file?\r\nimageSeries.data = [ {\r\n  \"title\": \"Brussels\",\r\n  \"latitude\": 50.8371,\r\n  \"longitude\": 4.3676,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Copenhagen\",\r\n  \"latitude\": 55.6763,\r\n  \"longitude\": 12.5681,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Paris\",\r\n  \"latitude\": 48.8567,\r\n  \"longitude\": 2.3510,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Reykjavik\",\r\n  \"latitude\": 64.1353,\r\n  \"longitude\": -21.8952,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Moscow\",\r\n  \"latitude\": 55.7558,\r\n  \"longitude\": 37.6176,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Madrid\",\r\n  \"latitude\": 40.4167,\r\n  \"longitude\": -3.7033,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"London\",\r\n  \"latitude\": 51.5002,\r\n  \"longitude\": -0.1262,\r\n  \"url\": \"http://www.google.co.uk\",\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Peking\",\r\n  \"latitude\": 39.9056,\r\n  \"longitude\": 116.3958,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"New Delhi\",\r\n  \"latitude\": 28.6353,\r\n  \"longitude\": 77.2250,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Tokyo\",\r\n  \"latitude\": 35.6785,\r\n  \"longitude\": 139.6823,\r\n  \"url\": \"http://www.google.co.jp\",\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Ankara\",\r\n  \"latitude\": 39.9439,\r\n  \"longitude\": 32.8560,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Buenos Aires\",\r\n  \"latitude\": -34.6118,\r\n  \"longitude\": -58.4173,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Brasilia\",\r\n  \"latitude\": -15.7801,\r\n  \"longitude\": -47.9292,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Ottawa\",\r\n  \"latitude\": 45.4235,\r\n  \"longitude\": -75.6979,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Washington\",\r\n  \"latitude\": 38.8921,\r\n  \"longitude\": -77.0241,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Kinshasa\",\r\n  \"latitude\": -4.3369,\r\n  \"longitude\": 15.3271,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Cairo\",\r\n  \"latitude\": 30.0571,\r\n  \"longitude\": 31.2272,\r\n  \"color\":colorSet.next()\r\n}, {\r\n  \"title\": \"Pretoria\",\r\n  \"latitude\": -25.7463,\r\n  \"longitude\": 28.1876,\r\n  \"color\":colorSet.next()\r\n} ];\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"chartdiv\" className={classes.chartdiv}></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, {useState, useEffect} from 'react';\r\nimport classes from './table.module.scss';\r\nimport axios from 'axios'\r\n\r\nconst Table = () => {\r\n    const [title, setTitle] = useState('Global Deaths')\r\n    const [state, setState] = useState('');\r\n    const [apiData, setAPI] = useState();\r\n    const getData = () => {\r\n        const allAPI = 'https://corona.lmao.ninja/v2/all?yesterday';\r\n        const fetchData = async () => {\r\n            const data = await axios.get(allAPI);\r\n            setState(data.data.deaths);\r\n            setAPI(data.data);\r\n        }\r\n        fetchData();\r\n    }\r\n    function recovery(){\r\n        setTitle('Global recovery');\r\n        setState(apiData.recovered);\r\n    }\r\n    function deaths(){\r\n        setTitle('Global Deaths');\r\n        setState(apiData.deaths);\r\n    }\r\n    function todayDeaths(){\r\n        setTitle('Deaths today');\r\n        setState(apiData.todayDeaths);\r\n    }\r\n    function todayCases(){\r\n        setTitle('Cases today');\r\n        setState(apiData.todayCases);\r\n    }\r\n    function casesPerOneMillion(){\r\n        setTitle('Cases to PerOneMillion');\r\n        setState(apiData.casesPerOneMillion);\r\n    }\r\n    function deathsPerOneMillion(){\r\n        setTitle('Deaths to PerOneMillion');\r\n        setState(apiData.deathsPerOneMillion);\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <div className={classes.sheet__wrapper}>\r\n            <table>\r\n                <thead>\r\n                    <td>{title}</td>\r\n                </thead>\r\n                <tbody>\r\n                    <td>{state}</td>\r\n                </tbody>\r\n            </table>\r\n            <button onClick={recovery}>RECOVERED</button>\r\n            <button onClick={deaths}>DEATHS</button>\r\n            <div>\r\n                <button  onClick={todayDeaths}>today Deaths</button>\r\n                <button onClick={todayCases}>today Cases</button>\r\n            </div>\r\n            <div>\r\n                <button  onClick={casesPerOneMillion}>Cases PerOneMillion</button>\r\n                <button onClick={deathsPerOneMillion}>Deaths PerOneMillion</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Table;\r\n","import React, {useState} from 'react';\r\nimport classes from './App.module.scss';\r\nimport Global from './components/GlobalSheet/GlobalSheet.jsx'\r\nimport GlobalSheetPerCountry from './components/GlobalPerCountry/GlobalPerCountry.jsx'\r\nimport Map from './components/Map/Map.js'\r\nimport Table from './components/Table/table.jsx'\r\n\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"wrapper__sheets-global\">\r\n        <Global />\r\n        <GlobalSheetPerCountry />\r\n      </div>\r\n      <Map />\r\n      <div className=\"wrapper__sheets-global\">\r\n        <Table />\r\n        <GlobalSheetPerCountry />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}